image:
  name: docker/compose:1.29.1
  entrypoint: [""]

services:
  - name: docker:dind
    alias: docker

stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  - apk add --no-cache openssh-client bash
  - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  - chmod +x ./setup_env.sh
  - bash ./setup_env.sh

build:
  stage: build
  script:
    - echo "Building for $CI_COMMIT_REF_NAME"
    - export FRONTEND_IMAGE=$IMAGE:frontend
    - docker pull $IMAGE:frontend || true
    - docker-compose -f docker-compose.ci.yml build
    - docker push $IMAGE:frontend
  only:
    - production

production:
  stage: deploy
  script:
    - export FRONTEND_IMAGE=$IMAGE:frontend
    # - export FRONTEND_IMAGE=$IMAGE:api
    - mkdir -p ~/.ssh
    - echo "$ID_RSA_PROD" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H "$PROD_SERVER_IP" >> ~/.ssh/known_hosts
    - ssh -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP "mkdir -p ~/sendchap-prod/frontend"
    - scp -o StrictHostKeyChecking=no -r package.json docker-compose.prod.yml .env $PROD_SERVER_USER@$PROD_SERVER_IP:~/sendchap-prod/frontend
    - | 
      ssh -o StrictHostKeyChecking=no "$PROD_SERVER_USER@$PROD_SERVER_IP" << ENDSSH
        cd ~/sendchap-prod/frontend
        echo "FRONTEND_IMAGE=$IMAGE:frontend" > .deploy.env
        cat .env >> .deploy.env
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
        docker pull $IMAGE:frontend
        docker compose --env-file .deploy.env -f docker-compose.prod.yml up -d
        docker system prune -a -f
      ENDSSH
  only:
    - production
  # when: manual
